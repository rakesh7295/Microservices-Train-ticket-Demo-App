apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-user-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-user-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-mongo
    spec:
      containers:
      - name: ts-user-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"       
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-auth-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-auth-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-mongo
    spec:
      containers:
      - name: ts-auth-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-route-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-mongo
    spec:
      containers:
      - name: ts-route-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-contacts-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-contacts-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-mongo
    spec:
      containers:
      - name: ts-contacts-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-mongo
    spec:
      containers:
      - name: ts-order-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-other-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-other-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-mongo
    spec:
      containers:
      - name: ts-order-other-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-config-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-config-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-mongo
    spec:
      containers:
      - name: ts-config-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-station-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-mongo
    spec:
      containers:
      - name: ts-station-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-train-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-mongo
    spec:
      containers:
      - name: ts-train-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-mongo
    spec:
      containers:
      - name: ts-travel-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel2-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel2-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-mongo
    spec:
      containers:
      - name: ts-travel2-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-price-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-mongo
    spec:
      containers:
      - name: ts-price-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-security-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-security-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-mongo
    spec:
      containers:
      - name: ts-security-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-inside-payment-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-inside-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-mongo
    spec:
      containers:
      - name: ts-inside-payment-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-payment-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-mongo
    spec:
      containers:
      - name: ts-payment-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-assurance-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-assurance-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-mongo
    spec:
      containers:
      - name: ts-assurance-mongo
        image: mongo:latest
        imagePullPolicy: IfNotPresent
        command:
        - "mongod"
        - "--bind_ip"
        - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ticket-office-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-ticket-office-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-mongo
    spec:
      containers:
      - name: ts-ticket-office-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-voucher-mysql
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-voucher-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-mysql
    spec:
      containers:
      - name: ts-voucher-mysql
        image: mysql:5.6.35
        imagePullPolicy: IfNotPresent      
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-map-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-map-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-map-mongo
    spec:
      containers:
      - name: ts-food-map-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-mongo
    spec:
      containers:
      - name: ts-consign-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-price-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-mongo
    spec:
      containers:
      - name: ts-consign-price-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-mongo
    spec:
      containers:
      - name: ts-food-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---
apiVersion: v1
kind: Service
metadata:
  name: ts-user-mongo 
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017
  selector:
   app: ts-user-mongo 

---
apiVersion: v1
kind: Service
metadata:
  name: ts-auth-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017
  selector:
   app: ts-auth-mongo

---
apiVersion: v1
kind: Service
metadata:
  name: ts-route-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017  
  selector:
   app: ts-route-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-contacts-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017  
  selector:
   app: ts-contacts-mongo
---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017  
  selector:
   app: ts-order-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-order-other-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017  
  selector:
   app: ts-order-other-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-config-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-config-mongo    

---

apiVersion: v1
kind: Service
metadata:
  name: ts-station-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-station-mongo   

---

apiVersion: v1
kind: Service
metadata:
  name: ts-train-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-train-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-travel-mongo  

---

apiVersion: v1
kind: Service
metadata:
  name: ts-travel2-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-travel2-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-price-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-price-mongo    

---

apiVersion: v1
kind: Service
metadata:
  name: ts-security-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017  
  selector:
   app: ts-security-mongo  

---

apiVersion: v1
kind: Service
metadata:
  name: ts-inside-payment-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-inside-payment-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-payment-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-payment-mongo
  
---

apiVersion: v1
kind: Service
metadata:
  name: ts-assurance-mongo
  namespace: train-mongo
spec:  
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-assurance-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-ticket-office-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-ticket-office-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-voucher-mysql
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 3306  
  selector:
   app: ts-voucher-mysql

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-map-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017  
  selector:
   app: ts-food-map-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-consign-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-consign-price-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-consign-price-mongo

---

apiVersion: v1
kind: Service
metadata:
  name: ts-food-mongo
  namespace: train-mongo
spec:
  ports:
    - name: http
      port: 27017    
  selector:
   app: ts-food-mongo

